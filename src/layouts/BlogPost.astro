---
import BaseLayout from "./Base.astro";
import { getLocaleTime, getPreviousAndNextPosts, sortMDByDate } from "src/util";
import Paginator from "@/components/Paginator";
import type { Post } from "@/types";

const {
	content: { title, description, pubDate, tags, ogImage },
	headings,
} = Astro.props;
const date = new Date(pubDate);
const datetime = date.toISOString();
const postDate = getLocaleTime(date, { month: "short", day: "2-digit" });
const currentPage = new URL(Astro.request.url).pathname;
const allPosts = await Astro.glob<Post>("../pages/post/*.md");
const allSortedPosts = sortMDByDate(allPosts);
const { prev, next } = getPreviousAndNextPosts(currentPage, allSortedPosts);
const paginationProps = {
	...(prev && {
		prevUrl: {
			url: prev.url,
			text: `‚Üê ${prev.frontmatter.title}`,
			srLabel: " Previous Article:",
		},
	}),
	...(next && {
		nextUrl: {
			url: next.url,
			text: `${next.frontmatter.title} ‚Üí`,
			srLabel: "Next Article:",
		},
	}),
};
---

<BaseLayout meta={{ title, description, ogImage }}>
	<div class="main-content">
		<article class="">
			<div class="mt-20 mb-24">
				<h1 class="mb-6">{title}</h1>
			</div>
				<!-- <div class="mt-12 prose prose-lg lg:prose-xl prose-cactus prose-th:before:content-none"> -->
			<div class="mt-12 content">
				<p class="mt-8">{description}</p>
				<slot />
				<p class="text-base mt-12 mb-6">&mdash; üëã Kyle</p>
				<div class="rss">
					<p class="text-base">Thanks for reading this post, &ldquo;<a href={Astro.url}>{title}</a>&rdquo;. If you‚Äôd enjoy reading future posts automagically, you can follow along via <a href="/rss.xml" title="Subscribe to my RSS feed">RSS feed</a>, <a href="https://mastodon.online/@kylejohnston" title="Follow me on Mastodon">Mastodon</a>, or <a href="https://twitter.com/kylejohnston" title="Follow me on Twitter">Twitter</a>.</p>
					<div class="flex flex-col my-6 uppercase sm:gap-y-2 md:flex-row md:items-center md:gap-y-0 md:divide-x md:divide-gray-600 dark:md:divide-gray-400 text-sm">
						<time {datetime} class="pr-2">Posted: {postDate}</time>
						{
							tags?.length && (
								<div class="flex items-center md:pl-2">
									Tagged: 
									<ul class="flex items-center ml-1 gap-x-2 my-0 list-none">
										{tags.map((tag) => (
											<li class="my-0 text-sm">
												<a
													class="inline-block"
													aria-label={`View more posts with the tag ${tag}`}
													href={`/tags/${tag}`}
												>
													&#35;{tag}
												</a>
											</li>
										))}
									</ul>
								</div>
							)
						}
					</div>
				</div>
			</div>
		</article>
		<div class="my-12">
			<Paginator {...paginationProps} />
		</div>
	</div>
	<div class="sidebar"></div>
</BaseLayout>

<style>
	/* Hide the weird code block adding the language */
	/* :global(article pre .language-id) {
		@apply hidden;
	} */
</style>	
